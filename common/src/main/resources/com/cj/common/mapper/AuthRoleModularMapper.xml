<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cj.common.mapper.AuthRoleModularMapper" >
  <resultMap id="BaseResultMap" type="com.cj.core.entity.AuthRoleModular" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="role_id" property="roleId" jdbcType="BIGINT" />
    <result column="modular_id" property="modularId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_id, modular_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from auth_role_modular
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from auth_role_modular
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.cj.core.entity.AuthRoleModular" >
    insert into auth_role_modular (id, role_id, modular_id
      )
    values (#{id,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, #{modularId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cj.core.entity.AuthRoleModular" >
    insert into auth_role_modular
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="modularId != null" >
        modular_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="modularId != null" >
        #{modularId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cj.core.entity.AuthRoleModular" >
    update auth_role_modular
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="modularId != null" >
        modular_id = #{modularId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cj.core.entity.AuthRoleModular" >
    update auth_role_modular
    set role_id = #{roleId,jdbcType=BIGINT},
      modular_id = #{modularId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <resultMap id="RoleModular" type="com.cj.core.domain.AuthRoleModulars">
    <result column="role_id" property="roleId"></result>
    <result column="role_name" property="roleName"></result>
    <result column="role_state" property="roleState"></result>
    <collection property="modularIds" ofType="com.cj.core.domain.Modular">
      <result column="modular_id" property="modularId"></result>
    </collection>
  </resultMap>

  <!--//查询角色-权限信息，树形结构封装-->
  <select id="findRoleModular" resultMap="RoleModular">
    SELECT
    ar.`role_id`,ar.`role_name`,ar.`role_state`,arm.`modular_id`
    FROM
    auth_role ar
    LEFT JOIN auth_role_modular arm ON arm.`role_id` = ar.`role_id`
    GROUP BY ar.`role_id`,arm.`modular_id`
    ORDER BY ar.`role_id`,arm.`modular_id`
  </select>

  <!--根据角色ID删除权限-->
  <delete id="deleteModularByRoleId" parameterType="java.lang.Long">
    DELETE FROM
    auth_role_modular
    WHERE
    role_id = #{roleId}
  </delete>

  <!--根据角色ID添加权限-->
  <insert id="addModularByRoleId" parameterType="java.util.Map">
    INSERT INTO
    auth_role_modular(role_id, modular_id)
    VALUES
    <foreach collection ="modularIds" item="item" index= "index" separator =",">
      (
      #{roleId}, #{item}
      )
    </foreach >
  </insert>
</mapper>